set search_path = siper;

BEGIN;

-- ===== tablas =====
ALTER TABLE fichadas ADD COLUMN annio            integer;
ALTER TABLE fichadas ADD COLUMN tipo_fichada     text;
ALTER TABLE fichadas ADD COLUMN observaciones    text;
ALTER TABLE fichadas ADD COLUMN punto            text;
ALTER TABLE fichadas ADD COLUMN tipo_dispositivo text;
ALTER TABLE fichadas ADD COLUMN id_original      text;
ALTER TABLE fichadas DROP COLUMN origen;


ALTER TABLE cod_novedades ADD COLUMN pierde_presentismo boolean;
ALTER TABLE cod_novedades ADD COLUMN cuenta_horas boolean;
ALTER TABLE cod_novedades ADD COLUMN requiere_fichadas boolean;
ALTER TABLE cod_novedades ADD COLUMN requiere_entrada boolean;
ALTER TABLE cod_novedades ADD COLUMN umbral_posterior_entrada integer;
ALTER TABLE cod_novedades ADD COLUMN umbral_anterior_salida integer;
ALTER TABLE cod_novedades ADD COLUMN necesita_verificacion_manual boolean;
ALTER TABLE cod_novedades ADD COLUMN eximido_fichar boolean;

ALTER TABLE bandas_horarias ADD COLUMN umbral_aviso_falta_entrada integer;
ALTER TABLE bandas_horarias ADD COLUMN umbral_aviso_falta_salida integer;

-- ===== id_fichada como IDENTITY (arranca en 101) =====
-- (crea la sequence automáticamente en el esquema correcto y con owner correcto)
ALTER TABLE fichadas
  ADD COLUMN IF NOT EXISTS id_fichada BIGINT
  GENERATED BY DEFAULT AS IDENTITY (START WITH 101);

-- completar filas existentes y restringir
UPDATE fichadas SET id_fichada = DEFAULT WHERE id_fichada IS NULL;
ALTER TABLE fichadas ALTER COLUMN id_fichada SET NOT NULL;

-- ===== reemplazar PK actual por PK compuesta (PK_anterior_cols, id_fichada) =====
DO $$
DECLARE
  tbl     regclass := 'siper.fichadas'::regclass;
  pk_name text;
  pk_cols text;
BEGIN
  SELECT conname INTO pk_name
  FROM pg_constraint
  WHERE conrelid = tbl AND contype = 'p';

  IF pk_name IS NULL THEN
    RAISE EXCEPTION 'La tabla % no tiene PK actual.', tbl::text;
  END IF;

  SELECT string_agg(quote_ident(a.attname), ', ' ORDER BY i)
    INTO pk_cols
  FROM (
    SELECT unnest(c.conkey) AS attnum, generate_subscripts(c.conkey,1) AS i
    FROM pg_constraint c
    WHERE c.conrelid = tbl AND c.contype = 'p'
  ) k
  JOIN pg_attribute a ON a.attrelid = tbl AND a.attnum = k.attnum;

  EXECUTE format('ALTER TABLE %s DROP CONSTRAINT %I', tbl, pk_name);
  -- Si preferís id_fichada primero, invertí el orden: PRIMARY KEY (id_fichada, %s)
  EXECUTE format('ALTER TABLE %s ADD CONSTRAINT %I PRIMARY KEY (%s, id_fichada)', tbl, pk_name, pk_cols);
END$$;


COMMIT;
